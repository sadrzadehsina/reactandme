{
  "title": "Zack Jackson - Principle Engineer of Luluemon",
  "category": "nested",
  "parent": "what-other-say-about-micro-frontend",
  "body": {
    "raw": "\n<div className=\"bg-blue-600 border-blue-950 border-r-4 border-b-4 px-4 py-2\">Read this summary</div>\n\nThis developer has extensive experience building micro-frontend (MFE) architectures since 2015, having developed large-scale projects, including a stack with 150 MFEs and platforms for companies like Starbucks and Lululemon. They highlight that the main benefits of MFEs are faster independent deployments, reduced engineering overhead, and greater scalability compared to monolithic applications. However, they also point out challenges, including managing shared code and dependencies, ensuring seamless UX between micro-frontends, and overcoming performance concerns. Tools like Webpack 5 Module Federation, single-spa, and GitLab CI are essential for handling the complexities of MFE development and deployment.\n\nThe developer advises using micro-frontends for larger companies with multiple teams that need fast and independent deployment, while smaller companies may not benefit from the added complexity. A key takeaway is the importance of designing for future scalability, centralizing shared code, and avoiding fragmented platform layers. They stress that UX should not be sacrificed for developer convenience, and emphasize the need for careful planning to ensure the system can handle growth over time.\n\n<hr />\n\n<h3>What is your experience with micro-frontends?</h3>\n\nI have exclusively built micro-frontend stacks for companies since 2015.\nThe largest stack I’ve built consisted of 150 separate micro-frontends. It\nconsisted of a shared component library; feature-based components used the\ncomponent library, but most features were deployed independently as\nmicro-frontends. The range of what the micro-frontends were made of was\npretty wide. Some were single components, some were full features, and\nothers were whole pages or user flows.\n\nI designed the Starbucks inventory management platform, used by all its\nstores. This stack consisted of six separate micro-frontend applications with\nhelper services for authentication.\n\nAt Lululemon, I am building a powerful stack that leverages an AppShell\nand Module Federation and that enables drag-and-drop refactors as features\nor code that can be moved between servers with no need for regression or\nextra engineering time. I’ve extended Module Federation beyond managing\nseamless micro-frontend experiences, into analytics, A/B testing, and\nconfiguration management—all while remaining standalone and\nindependently deployable at any time, providing evergreen code to\nconsumers.\n\n<h3>\n  What benefits and pitfalls did you encounter in your journey with\n  micro-frontends?\n</h3>\n\nOne pitfall was poor code sharing. Sharing vendor code is manual and\nprimitive, causing centralized dependency on an external set of vendors,\nand upgrading package versions is complex as breaking changes would\nrequire all micro-frontends to be prepared for the upgrade of a shared\nvendor.\n\nAnother was poor UX. When moving between micro-frontends, a page will\nreload. There are very few solutions to sharing global state or making\nmicro-frontends work as well as a monolithic SPA. Huge amounts of time\ncan go into improving the UX.\n\nThe benefits of micro-frontends outweigh the pitfalls at scale. Code can be\ndeployed independently, builds are faster, regressions are easier to run, and\nthe blast radius of a critical failure is well contained. It saves engineering\ntime and company money, as features can be delivered at a fast rate, unlike\nin a monolith, where the rate of delivery slowly degrades as the codebase\nincreases in size and complexity. Micro-frontends remove the harsh\nrequirement of communication and coordination overhead between teams.\nThey are also cheaper to run and scale because you can use cheaper, lesspowerful servers. Unlike a monolith, you can scale per page or per\ncomponent on cheaper hardware instead of scaling expensive and powerful\nhardware to meet the base demands and memory consumption of the entire\nmonolith.\n\nMicro-frontends are far more agile, and they safeguard companies against\nsite-wide critical failures. Redundancy layers can be built easier, and teams\ncan model a platform to fit their needs instead of using a one-size-fits-all\nmodel that monolithic platforms enforce.\n\n<h3>\n  Did you contribute to any OSS project related to microfrontends? If so, which\n  one?\n</h3>\n\nNext.js, webpack 5 core, single-spa, React Static, and Module Federation\nextensions and enhancements.\n\n<h3>\n  When would you suggest using micro-frontends, and when should we avoid them?\n</h3>\n\nSmall companies will likely not benefit from the engineering overhead.\nLarger companies with challenges at scale or companies with multiple\nteams who rapidly deploy are likely best suited to benefit from distributed\nJavaScript applications.\n\nRegardless of use case and scale, it’s very important to design your platform\nfrom the ground up to handle scale. If you foresee rapid scale in the future,\ndesigning a system that can be migrated into a distributed application model\nis key. You’ll save time and money by avoiding a full-scale rewrite.\n\n<h3>\n  At the end of your last micro-frontend project, what worked and what didn’t?\n</h3>\n\nAutomatic vendor sharing was challenging, routing between the separate\napps and making that route transition seamless were a major challenge, and\nmaintaining authentication sessions and sharing state were very challenging\nas well. My current micro-frontend project has been designed to avoid these\nissues by rethinking how applications interface with each other and are\ndesigned in general.\n\n<h3>\n  What are the must-have tools for developers to have an efficient experience\n  with micro-frontends?\n</h3>\n\nWebpack 5 Module Federation is a massive unlock, single-spa provides a\nstrong orchestration layer, Next.js with a custom AppShell, and yarn\nworkspaces that serve as sub-apps is a robust design pattern, which can\nenable scale and can integrate with Module Federation if or when needed.\nMicro is another fantastic tool for creating an ingress to route a user to the\ncorrect micro-frontend. Leveraging monorepos keeps code organized but\nwill still have the pitfall of having only one master branch, bottlenecking\ndeployments. Semantic-release is vital for micro-frontend architecture,\nwhere semver plays an important role in the scalability and reliable code\ndistribution.\n\n<h3>\n  What would you suggest for a person who wants to embrace this architecture?\n</h3>\n\nGive Module Federation a try. Most importantly, design a system that\nsupports scale. Think about monorepos, feature binding, how bound a page\nor feature is to a specific server, and how hard it would be to split some of\nthe app into another micro-frontend at a later point in time. Avoid hard\nbinding to a server; build software that can be easily migrated to a new\nstack. Globals like shared state should encapsulate a page or feature,\nkeeping it independent and unbound to the server. Moving a page or feature\nto another server instance should be built in a way that will provide any\nglobals needed out the box, not involve multiple copy-pastes of various\nparts of the application. GitLab CI is powerful and a strong contender for\nsophisticated infrastructure requirements.\n\n<h3>\n  What was the impact of introducing micro-frontends to developers who didn’t\n  know about them? What challenges have you faced?\n</h3>\n\nDevelopment time decreases and efficiency usually quadruples. Introducing\nthe pattern has given development teams a better experience and the ability\nto move more code through the pipeline at a faster rate. Challenges\nrevolved around performance concerns from SRE and getting developers\nused to working in more than one repo at the same time. In highly granular\nMFE stacks, it can be a learning curve to run multiple MFEs locally and to\nget used to having several IDEs open, depending on what feature is being\ndeveloped.\n\n<h3>What was the developer experience like in your last project?</h3>\n\nKubernetes, custom router and auth layers, shared global packages, and\nspecial script to boot and run all MFEs in one place for full workflow use.\n\n<h3>\n  Many developers are concerned about performance and design consistency with\n  micro-frontends. What are your suggestions for overcoming these challenges?\n</h3>\n\nWebpack 5 Module Federation is the best solution to this problem. There\nare no performance concerns or design consistency issues. Code is shared at\nruntime; it’s evergreen.\n\nA non-webpack-5 solution would be to use renovate bot and depend on\nabstraction for distribution or have the micro-frontends supply a render API\nto allow other applications to retrieve HTML and other resources over a\nnetwork call. Ultimately, these are better ways to share feature and vendor\ncode along with automation around upgrading dependencies.\n\n<h3>What are the first steps for working with microfrontends?</h3>\n\nFigure out how it’s going to scale. Centralize shared code, utilities, and data\ncalls. Make sure the platform layer does not become fragmented when\nmanaging several independent servers. Think about routing and how you\nwill map various routes to their MFEs.\n\n<h3>\n  Can you share the main thing to avoid when working with micro-frontends?\n</h3>\n\nNot abstracting core code to npm. Copy-pasting server infrastructure, which\nleads to maintenance challenges and fragmentation at the platform level.\nEither an application shell or server shell should exist, which holds highlevel aspects, like auth, user state, tooling, and translation configurations.\n\n<h3>\n  What are the main challenges in embracing this architecture from your\n  perspective?\n</h3>\n\nAvoiding UX degradation in favor of DX improvement; neither should be\ncompromised. Thinking out how your MFE stack is going to look and work\nin one year’s time with over 10 stacks: does it architecturally scale?\n\n<h3>Would you like to share some useful resources about micro-frontends?</h3>\n\nHere is a good resource: “Webpack 5 Module Federation: A Game-Changer\nin JavaScript Architecture”\n\n<h3>Micro-frontends in three words...</h3>\n\nCheap, flexible, scalable.\n\n\n",
    "code": "var Component=(()=>{var dn=Object.create;var A=Object.defineProperty;var ln=Object.getOwnPropertyDescriptor;var un=Object.getOwnPropertyNames;var mn=Object.getPrototypeOf,fn=Object.prototype.hasOwnProperty;var X=(l,t)=>()=>(t||l((t={exports:{}}).exports,t),t.exports),hn=(l,t)=>{for(var p in t)A(l,p,{get:t[p],enumerable:!0})},we=(l,t,p,v)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let _ of un(t))!fn.call(l,_)&&_!==p&&A(l,_,{get:()=>t[_],enumerable:!(v=ln(t,_))||v.enumerable});return l};var bn=(l,t,p)=>(p=l!=null?dn(mn(l)):{},we(t||!l||!l.__esModule?A(p,\"default\",{value:l,enumerable:!0}):p,l)),pn=l=>we(A({},\"__esModule\",{value:!0}),l);var xe=X((Nn,Ne)=>{Ne.exports=React});var Ee=X(q=>{\"use strict\";(function(){\"use strict\";var l=xe(),t=Symbol.for(\"react.element\"),p=Symbol.for(\"react.portal\"),v=Symbol.for(\"react.fragment\"),_=Symbol.for(\"react.strict_mode\"),B=Symbol.for(\"react.profiler\"),H=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),T=Symbol.for(\"react.forward_ref\"),M=Symbol.for(\"react.suspense\"),D=Symbol.for(\"react.suspense_list\"),C=Symbol.for(\"react.memo\"),I=Symbol.for(\"react.lazy\"),Ce=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Se=\"@@iterator\";function Oe(e){if(e===null||typeof e!=\"object\")return null;var n=J&&e[J]||e[Se];return typeof n==\"function\"?n:null}var N=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function f(e){{for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];Pe(\"error\",e,r)}}function Pe(e,n,r){{var o=N.ReactDebugCurrentFrame,c=o.getStackAddendum();c!==\"\"&&(n+=\"%s\",r=r.concat([c]));var d=r.map(function(s){return String(s)});d.unshift(\"Warning: \"+n),Function.prototype.apply.call(console[e],console,d)}}var je=!1,Fe=!1,Ae=!1,Me=!1,De=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ie(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===v||e===B||De||e===_||e===M||e===D||Me||e===Ce||je||Fe||Ae||typeof e==\"object\"&&e!==null&&(e.$$typeof===I||e.$$typeof===C||e.$$typeof===H||e.$$typeof===K||e.$$typeof===T||e.$$typeof===Z||e.getModuleId!==void 0))}function We(e,n,r){var o=e.displayName;if(o)return o;var c=n.displayName||n.name||\"\";return c!==\"\"?r+\"(\"+c+\")\":r}function Q(e){return e.displayName||\"Context\"}function g(e){if(e==null)return null;if(typeof e.tag==\"number\"&&f(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case v:return\"Fragment\";case p:return\"Portal\";case B:return\"Profiler\";case _:return\"StrictMode\";case M:return\"Suspense\";case D:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var n=e;return Q(n)+\".Consumer\";case H:var r=e;return Q(r._context)+\".Provider\";case T:return We(e,e.render,\"ForwardRef\");case C:var o=e.displayName||null;return o!==null?o:g(e.type)||\"Memo\";case I:{var c=e,d=c._payload,s=c._init;try{return g(s(d))}catch{return null}}}return null}var w=Object.assign,k=0,ee,ne,re,te,ae,oe,ie;function se(){}se.__reactDisabledLog=!0;function Le(){{if(k===0){ee=console.log,ne=console.info,re=console.warn,te=console.error,ae=console.group,oe=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}k++}}function Ye(){{if(k--,k===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:w({},e,{value:ee}),info:w({},e,{value:ne}),warn:w({},e,{value:re}),error:w({},e,{value:te}),group:w({},e,{value:ae}),groupCollapsed:w({},e,{value:oe}),groupEnd:w({},e,{value:ie})})}k<0&&f(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var W=N.ReactCurrentDispatcher,L;function S(e,n,r){{if(L===void 0)try{throw Error()}catch(c){var o=c.stack.trim().match(/\\n( *(at )?)/);L=o&&o[1]||\"\"}return`\n`+L+e}}var Y=!1,O;{var $e=typeof WeakMap==\"function\"?WeakMap:Map;O=new $e}function ce(e,n){if(!e||Y)return\"\";{var r=O.get(e);if(r!==void 0)return r}var o;Y=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var d;d=W.current,W.current=null,Le();try{if(n){var s=function(){throw Error()};if(Object.defineProperty(s.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(s,[])}catch(y){o=y}Reflect.construct(e,[],s)}else{try{s.call()}catch(y){o=y}e.call(s.prototype)}}else{try{throw Error()}catch(y){o=y}e()}}catch(y){if(y&&o&&typeof y.stack==\"string\"){for(var i=y.stack.split(`\n`),h=o.stack.split(`\n`),u=i.length-1,m=h.length-1;u>=1&&m>=0&&i[u]!==h[m];)m--;for(;u>=1&&m>=0;u--,m--)if(i[u]!==h[m]){if(u!==1||m!==1)do if(u--,m--,m<0||i[u]!==h[m]){var b=`\n`+i[u].replace(\" at new \",\" at \");return e.displayName&&b.includes(\"<anonymous>\")&&(b=b.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&O.set(e,b),b}while(u>=1&&m>=0);break}}}finally{Y=!1,W.current=d,Ye(),Error.prepareStackTrace=c}var E=e?e.displayName||e.name:\"\",ve=E?S(E):\"\";return typeof e==\"function\"&&O.set(e,ve),ve}function Ue(e,n,r){return ce(e,!1)}function Ve(e){var n=e.prototype;return!!(n&&n.isReactComponent)}function P(e,n,r){if(e==null)return\"\";if(typeof e==\"function\")return ce(e,Ve(e));if(typeof e==\"string\")return S(e);switch(e){case M:return S(\"Suspense\");case D:return S(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case T:return Ue(e.render);case C:return P(e.type,n,r);case I:{var o=e,c=o._payload,d=o._init;try{return P(d(c),n,r)}catch{}}}return\"\"}var j=Object.prototype.hasOwnProperty,de={},le=N.ReactDebugCurrentFrame;function F(e){if(e){var n=e._owner,r=P(e.type,e._source,n?n.type:null);le.setExtraStackFrame(r)}else le.setExtraStackFrame(null)}function ze(e,n,r,o,c){{var d=Function.call.bind(j);for(var s in e)if(d(e,s)){var i=void 0;try{if(typeof e[s]!=\"function\"){var h=Error((o||\"React class\")+\": \"+r+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw h.name=\"Invariant Violation\",h}i=e[s](n,s,o,r,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(u){i=u}i&&!(i instanceof Error)&&(F(c),f(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",o||\"React class\",r,s,typeof i),F(null)),i instanceof Error&&!(i.message in de)&&(de[i.message]=!0,F(c),f(\"Failed %s type: %s\",r,i.message),F(null))}}}var Ge=Array.isArray;function $(e){return Ge(e)}function Xe(e){{var n=typeof Symbol==\"function\"&&Symbol.toStringTag,r=n&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return r}}function qe(e){try{return ue(e),!1}catch{return!0}}function ue(e){return\"\"+e}function me(e){if(qe(e))return f(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Xe(e)),ue(e)}var R=N.ReactCurrentOwner,Be={key:!0,ref:!0,__self:!0,__source:!0},fe,he,U;U={};function He(e){if(j.call(e,\"ref\")){var n=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(n&&n.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(j.call(e,\"key\")){var n=Object.getOwnPropertyDescriptor(e,\"key\").get;if(n&&n.isReactWarning)return!1}return e.key!==void 0}function Je(e,n){if(typeof e.ref==\"string\"&&R.current&&n&&R.current.stateNode!==n){var r=g(R.current.type);U[r]||(f('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',g(R.current.type),e.ref),U[r]=!0)}}function Ze(e,n){{var r=function(){fe||(fe=!0,f(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:r,configurable:!0})}}function Qe(e,n){{var r=function(){he||(he=!0,f(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:r,configurable:!0})}}var en=function(e,n,r,o,c,d,s){var i={$$typeof:t,type:e,key:n,ref:r,props:s,_owner:d};return i._store={},Object.defineProperty(i._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(i,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:o}),Object.defineProperty(i,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:c}),Object.freeze&&(Object.freeze(i.props),Object.freeze(i)),i};function nn(e,n,r,o,c){{var d,s={},i=null,h=null;r!==void 0&&(me(r),i=\"\"+r),Ke(n)&&(me(n.key),i=\"\"+n.key),He(n)&&(h=n.ref,Je(n,c));for(d in n)j.call(n,d)&&!Be.hasOwnProperty(d)&&(s[d]=n[d]);if(e&&e.defaultProps){var u=e.defaultProps;for(d in u)s[d]===void 0&&(s[d]=u[d])}if(i||h){var m=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;i&&Ze(s,m),h&&Qe(s,m)}return en(e,i,h,c,o,R.current,s)}}var V=N.ReactCurrentOwner,be=N.ReactDebugCurrentFrame;function x(e){if(e){var n=e._owner,r=P(e.type,e._source,n?n.type:null);be.setExtraStackFrame(r)}else be.setExtraStackFrame(null)}var z;z=!1;function G(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===t}function pe(){{if(V.current){var e=g(V.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function rn(e){{if(e!==void 0){var n=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),r=e.lineNumber;return`\n\nCheck your code at `+n+\":\"+r+\".\"}return\"\"}}var ge={};function tn(e){{var n=pe();if(!n){var r=typeof e==\"string\"?e:e.displayName||e.name;r&&(n=`\n\nCheck the top-level render call using <`+r+\">.\")}return n}}function ye(e,n){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var r=tn(n);if(ge[r])return;ge[r]=!0;var o=\"\";e&&e._owner&&e._owner!==V.current&&(o=\" It was passed a child from \"+g(e._owner.type)+\".\"),x(e),f('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',r,o),x(null)}}function _e(e,n){{if(typeof e!=\"object\")return;if($(e))for(var r=0;r<e.length;r++){var o=e[r];G(o)&&ye(o,n)}else if(G(e))e._store&&(e._store.validated=!0);else if(e){var c=Oe(e);if(typeof c==\"function\"&&c!==e.entries)for(var d=c.call(e),s;!(s=d.next()).done;)G(s.value)&&ye(s.value,n)}}}function an(e){{var n=e.type;if(n==null||typeof n==\"string\")return;var r;if(typeof n==\"function\")r=n.propTypes;else if(typeof n==\"object\"&&(n.$$typeof===T||n.$$typeof===C))r=n.propTypes;else return;if(r){var o=g(n);ze(r,e.props,\"prop\",o,e)}else if(n.PropTypes!==void 0&&!z){z=!0;var c=g(n);f(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",c||\"Unknown\")}typeof n.getDefaultProps==\"function\"&&!n.getDefaultProps.isReactClassApproved&&f(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function on(e){{for(var n=Object.keys(e.props),r=0;r<n.length;r++){var o=n[r];if(o!==\"children\"&&o!==\"key\"){x(e),f(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",o),x(null);break}}e.ref!==null&&(x(e),f(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),x(null))}}function sn(e,n,r,o,c,d){{var s=Ie(e);if(!s){var i=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var h=rn(c);h?i+=h:i+=pe();var u;e===null?u=\"null\":$(e)?u=\"array\":e!==void 0&&e.$$typeof===t?(u=\"<\"+(g(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):u=typeof e,f(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",u,i)}var m=nn(e,n,r,c,d);if(m==null)return m;if(s){var b=n.children;if(b!==void 0)if(o)if($(b)){for(var E=0;E<b.length;E++)_e(b[E],e);Object.freeze&&Object.freeze(b)}else f(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else _e(b,e)}return e===v?on(m):an(m),m}}var cn=sn;q.Fragment=v,q.jsxDEV=cn})()});var Re=X((En,ke)=>{\"use strict\";ke.exports=Ee()});var vn={};hn(vn,{default:()=>_n,frontmatter:()=>gn});var a=bn(Re()),gn={title:\"Zack Jackson - Principle Engineer of Luluemon\",category:\"nested\",parent:\"what-other-say-about-micro-frontend\"};function Te(l){let t=Object.assign({p:\"p\"},l.components);return(0,a.jsxDEV)(a.Fragment,{children:[(0,a.jsxDEV)(\"div\",{className:\"bg-blue-600 border-blue-950 border-r-4 border-b-4 px-4 py-2\",children:\"Read this summary\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:7,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:\"This developer has extensive experience building micro-frontend (MFE) architectures since 2015, having developed large-scale projects, including a stack with 150 MFEs and platforms for companies like Starbucks and Lululemon. They highlight that the main benefits of MFEs are faster independent deployments, reduced engineering overhead, and greater scalability compared to monolithic applications. However, they also point out challenges, including managing shared code and dependencies, ensuring seamless UX between micro-frontends, and overcoming performance concerns. Tools like Webpack 5 Module Federation, single-spa, and GitLab CI are essential for handling the complexities of MFE development and deployment.\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:9,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:\"The developer advises using micro-frontends for larger companies with multiple teams that need fast and independent deployment, while smaller companies may not benefit from the added complexity. A key takeaway is the importance of designing for future scalability, centralizing shared code, and avoiding fragmented platform layers. They stress that UX should not be sacrificed for developer convenience, and emphasize the need for careful planning to ensure the system can handle growth over time.\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:11,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"hr\",{},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:\"What is your experience with micro-frontends?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`I have exclusively built micro-frontend stacks for companies since 2015.\nThe largest stack I\\u2019ve built consisted of 150 separate micro-frontends. It\nconsisted of a shared component library; feature-based components used the\ncomponent library, but most features were deployed independently as\nmicro-frontends. The range of what the micro-frontends were made of was\npretty wide. Some were single components, some were full features, and\nothers were whole pages or user flows.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`I designed the Starbucks inventory management platform, used by all its\nstores. This stack consisted of six separate micro-frontend applications with\nhelper services for authentication.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`At Lululemon, I am building a powerful stack that leverages an AppShell\nand Module Federation and that enables drag-and-drop refactors as features\nor code that can be moved between servers with no need for regression or\nextra engineering time. I\\u2019ve extended Module Federation beyond managing\nseamless micro-frontend experiences, into analytics, A/B testing, and\nconfiguration management\\u2014all while remaining standalone and\nindependently deployable at any time, providing evergreen code to\nconsumers.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:`What benefits and pitfalls did you encounter in your journey with\nmicro-frontends?`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:39,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:38,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`One pitfall was poor code sharing. Sharing vendor code is manual and\nprimitive, causing centralized dependency on an external set of vendors,\nand upgrading package versions is complex as breaking changes would\nrequire all micro-frontends to be prepared for the upgrade of a shared\nvendor.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Another was poor UX. When moving between micro-frontends, a page will\nreload. There are very few solutions to sharing global state or making\nmicro-frontends work as well as a monolithic SPA. Huge amounts of time\ncan go into improving the UX.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:49,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`The benefits of micro-frontends outweigh the pitfalls at scale. Code can be\ndeployed independently, builds are faster, regressions are easier to run, and\nthe blast radius of a critical failure is well contained. It saves engineering\ntime and company money, as features can be delivered at a fast rate, unlike\nin a monolith, where the rate of delivery slowly degrades as the codebase\nincreases in size and complexity. Micro-frontends remove the harsh\nrequirement of communication and coordination overhead between teams.\nThey are also cheaper to run and scale because you can use cheaper, lesspowerful servers. Unlike a monolith, you can scale per page or per\ncomponent on cheaper hardware instead of scaling expensive and powerful\nhardware to meet the base demands and memory consumption of the entire\nmonolith.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:54,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Micro-frontends are far more agile, and they safeguard companies against\nsite-wide critical failures. Redundancy layers can be built easier, and teams\ncan model a platform to fit their needs instead of using a one-size-fits-all\nmodel that monolithic platforms enforce.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:66,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:`Did you contribute to any OSS project related to microfrontends? If so, which\none?`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:72,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:71,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Next.js, webpack 5 core, single-spa, React Static, and Module Federation\nextensions and enhancements.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:76,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:\"When would you suggest using micro-frontends, and when should we avoid them?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:80,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:79,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Small companies will likely not benefit from the engineering overhead.\nLarger companies with challenges at scale or companies with multiple\nteams who rapidly deploy are likely best suited to benefit from distributed\nJavaScript applications.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:83,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Regardless of use case and scale, it\\u2019s very important to design your platform\nfrom the ground up to handle scale. If you foresee rapid scale in the future,\ndesigning a system that can be migrated into a distributed application model\nis key. You\\u2019ll save time and money by avoiding a full-scale rewrite.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:88,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:\"At the end of your last micro-frontend project, what worked and what didn\\u2019t?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:94,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:93,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Automatic vendor sharing was challenging, routing between the separate\napps and making that route transition seamless were a major challenge, and\nmaintaining authentication sessions and sharing state were very challenging\nas well. My current micro-frontend project has been designed to avoid these\nissues by rethinking how applications interface with each other and are\ndesigned in general.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:97,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:`What are the must-have tools for developers to have an efficient experience\nwith micro-frontends?`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:105,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:104,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Webpack 5 Module Federation is a massive unlock, single-spa provides a\nstrong orchestration layer, Next.js with a custom AppShell, and yarn\nworkspaces that serve as sub-apps is a robust design pattern, which can\nenable scale and can integrate with Module Federation if or when needed.\nMicro is another fantastic tool for creating an ingress to route a user to the\ncorrect micro-frontend. Leveraging monorepos keeps code organized but\nwill still have the pitfall of having only one master branch, bottlenecking\ndeployments. Semantic-release is vital for micro-frontend architecture,\nwhere semver plays an important role in the scalability and reliable code\ndistribution.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:109,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:\"What would you suggest for a person who wants to embrace this architecture?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:121,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:120,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Give Module Federation a try. Most importantly, design a system that\nsupports scale. Think about monorepos, feature binding, how bound a page\nor feature is to a specific server, and how hard it would be to split some of\nthe app into another micro-frontend at a later point in time. Avoid hard\nbinding to a server; build software that can be easily migrated to a new\nstack. Globals like shared state should encapsulate a page or feature,\nkeeping it independent and unbound to the server. Moving a page or feature\nto another server instance should be built in a way that will provide any\nglobals needed out the box, not involve multiple copy-pastes of various\nparts of the application. GitLab CI is powerful and a strong contender for\nsophisticated infrastructure requirements.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:124,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:`What was the impact of introducing micro-frontends to developers who didn\\u2019t\nknow about them? What challenges have you faced?`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:137,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:136,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Development time decreases and efficiency usually quadruples. Introducing\nthe pattern has given development teams a better experience and the ability\nto move more code through the pipeline at a faster rate. Challenges\nrevolved around performance concerns from SRE and getting developers\nused to working in more than one repo at the same time. In highly granular\nMFE stacks, it can be a learning curve to run multiple MFEs locally and to\nget used to having several IDEs open, depending on what feature is being\ndeveloped.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:141,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:\"What was the developer experience like in your last project?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:150,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Kubernetes, custom router and auth layers, shared global packages, and\nspecial script to boot and run all MFEs in one place for full workflow use.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:152,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:`Many developers are concerned about performance and design consistency with\nmicro-frontends. What are your suggestions for overcoming these challenges?`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:156,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:155,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Webpack 5 Module Federation is the best solution to this problem. There\nare no performance concerns or design consistency issues. Code is shared at\nruntime; it\\u2019s evergreen.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:160,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`A non-webpack-5 solution would be to use renovate bot and depend on\nabstraction for distribution or have the micro-frontends supply a render API\nto allow other applications to retrieve HTML and other resources over a\nnetwork call. Ultimately, these are better ways to share feature and vendor\ncode along with automation around upgrading dependencies.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:164,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:\"What are the first steps for working with microfrontends?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:170,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Figure out how it\\u2019s going to scale. Centralize shared code, utilities, and data\ncalls. Make sure the platform layer does not become fragmented when\nmanaging several independent servers. Think about routing and how you\nwill map various routes to their MFEs.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:172,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:\"Can you share the main thing to avoid when working with micro-frontends?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:178,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:177,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Not abstracting core code to npm. Copy-pasting server infrastructure, which\nleads to maintenance challenges and fragmentation at the platform level.\nEither an application shell or server shell should exist, which holds highlevel aspects, like auth, user state, tooling, and translation configurations.`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:181,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:(0,a.jsxDEV)(t.p,{children:`What are the main challenges in embracing this architecture from your\nperspective?`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:186,columnNumber:3},this)},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:185,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Avoiding UX degradation in favor of DX improvement; neither should be\ncompromised. Thinking out how your MFE stack is going to look and work\nin one year\\u2019s time with over 10 stacks: does it architecturally scale?`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:190,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:\"Would you like to share some useful resources about micro-frontends?\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:194,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:`Here is a good resource: \\u201CWebpack 5 Module Federation: A Game-Changer\nin JavaScript Architecture\\u201D`},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:196,columnNumber:1},this),`\n`,(0,a.jsxDEV)(\"h3\",{children:\"Micro-frontends in three words...\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:199,columnNumber:1},this),`\n`,(0,a.jsxDEV)(t.p,{children:\"Cheap, flexible, scalable.\"},void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:201,columnNumber:1},this)]},void 0,!0,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\",lineNumber:1,columnNumber:1},this)}function yn(l={}){let{wrapper:t}=l.components||{};return t?(0,a.jsxDEV)(t,Object.assign({},l,{children:(0,a.jsxDEV)(Te,l,void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\"},this)}),void 0,!1,{fileName:\"/home/sina/git/reactandme/src/posts/what-other-say-about-micro-frontend/_mdx_bundler_entry_point-3e3cb863-97cd-4962-ba36-e4a81edbc8c7.mdx\"},this):Te(l)}var _n=yn;return pn(vn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "what-other-say-about-micro-frontend/zack-jackson.mdx",
  "_raw": {
    "sourceFilePath": "what-other-say-about-micro-frontend/zack-jackson.mdx",
    "sourceFileName": "zack-jackson.mdx",
    "sourceFileDir": "what-other-say-about-micro-frontend",
    "contentType": "mdx",
    "flattenedPath": "what-other-say-about-micro-frontend/zack-jackson"
  },
  "type": "Post",
  "url": "/posts/what-other-say-about-micro-frontend/zack-jackson"
}